Command to run the job/compile:

cdy; ybd --sj && bin/yb-ctl restart --tserver_flags vmodule=wait_state\=3,global_memstore_size_mb_max=1,db_block_cache_size_bytes=10240,enable_tracing=false && bin/yb-ctl status && cd ~/code/yb-sample-apps && bash ./run_sql.sh 10 1


cd ~/code/yugabyte-db; ybd --sj && bin/yb-ctl restart --tserver_flags vmodule=wait_state\=3,global_memstore_size_mb_max=1,db_block_cache_size_bytes=10240,enable_tracing=false && bin/yb-ctl status && bash ./auh-transitions/run_sql.sh 10 1

Let it run for ~5-10 mins.
Kill it, and grep the yb-tserver.INFO for the following lines:

VLOG(3) << this << " " << ToString() << " setting state to " << util::ToString(c);

LOG_FILE=/Users/amitanand/yugabyte-data/node-1/disk-1/yb-data/tserver/logs/yb-tserver.INFO
CSV_FILE=transactions_new.csv
DB_FILE=transactions_new.db

-- grep out the strings that match "setting state to"
-- extract out the i) old state, 2) method name, and 3) new state
-- sort | uniq -c : to get the counts to see how often these transitions occur
-- replace spaces with commas, and remove leading commas to have the data in a CSV format.
--
grep "setting state to" ${LOG_FILE} | sed 's/.*code: //; s/ aux_info:.*method: /,/; s/ \}.*setting state to /,/' | sort | uniq -c | sed 's/^ *//; s/ /,/'  > ${CSV_FILE}

--
-- insert the header:
-- count,current_wait_state,method_name,next_wait_state
--
gsed -i '1i\count,current_wait_state,method_name,next_wait_state' ${CSV_FILE}

-- Load up the data into sqlite3 and query the state transitions by method, or for next state.

echo .import ${CSV_FILE} transitions

sqlite3 $DB_FILE

.mode csv
.import ${CSV_FILE} transitions

create view incoming_counts as select next_wait_state as wait_state, sum(count) as counts from transitions group by next_wait_state;
create view outgoing_counts as select current_wait_state as wait_state, sum(count) as counts from transitions group by current_wait_state;
create view transition_counts as select current_wait_state, next_wait_state, sum(count) as count from transitions group by current_wait_state, next_wait_state;
create view transition_curr_and_next as select current_wait_state, next_wait_state from transitions group by current_wait_state, next_wait_state;

create view num_next_states as select current_wait_state, count(*) as num_next from !transition_curr_and_next group by current_wait_state;
create view num_prev_states as select next_wait_state as state, count(*) as num_prev from transition_curr_and_next group by next_wait_state;

select * from transitions  where method_name = 'ActiveUniverseHistory';
select * from transitions  where current_wait_state = 'ResponseQueued';
select * from transitions  where next_wait_state = 'HandlingDone';
select * from num_prev_states;
select * from num_next_states;


----
For processing which states change transition across threads

grep wait_state.cc:120 % | grep -o "Setting state to .*" | awk '{ print $4, $6, $9, $12 }' | awk '{ print $1, $3}' | uniq | sort | uniq


:!grep wait_state.cc:120 yb-tserver.INFO | grep -o "Setting state to .*" | awk '{ print $4, $6, $9, $12 }' | awk '{ print $1, $3}' | uniq | sort | uniq
Applying previously
Applying ResponseTransferred
Created Unused
Handling Queued
PrepareAndStart previously
QueueingResponse YBClientRpcsSent
ResponseTransferred ApplyDone
ResponseTransferred ResponseQueued

:!grep wait_state.cc:120 % | grep -o "was previously .*" | awk '{ print $3, $6 }' |  uniq | sort | uniq
grep wait_state.cc:120 % | grep -o "was previously .*" | awk '{ print $3, $6 }' |  uniq | sort | uniq

AddedToLeader
ApplyDone
LookingUpTablet
Queued
ResponseQueued
ResponseTransferred
SubmittedChangeMetadataToPreparer
SubmittedTruncateToPreparer
SubmittedUpdateTransactionToPreparer
SubmittedWriteToPreparer
Unused
YBClientRpcsSent

10:21 $ grep -e "wait_state.* does_io Added " yb-tserver.*INFO*
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-095726.30491:I0828 09:57:59.353330 30880 wait_state.cc:238] does_io Added Handling
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-095726.30491:I0828 09:58:00.548563 31004 wait_state.cc:238] does_io Added UpdateReplica
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-100027.31629:I0828 10:00:32.198650 31970 wait_state.cc:238] does_io Added Handling
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-100027.31629:I0828 10:00:32.828797 32094 wait_state.cc:238] does_io Added UpdateReplica
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-100557.2109:I0828 10:06:02.706590  2485 wait_state.cc:238] does_io Added Handling
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-100557.2109:I0828 10:06:03.286965  2482 wait_state.cc:238] does_io Added UpdateReplica
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-100557.2109:I0828 10:07:52.910118  2169 wait_state.cc:238] does_io Added Applying
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-100557.2109:I0828 10:17:07.257565  5048 wait_state.cc:238] does_io Added CloseFile
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-100557.2109:I0828 10:17:07.257921  5048 wait_state.cc:238] does_io Added BlockCacheReadFromDisk
yb-tserver.INFO:I0828 10:06:02.706590  2485 wait_state.cc:238] does_io Added Handling
yb-tserver.INFO:I0828 10:06:03.286965  2482 wait_state.cc:238] does_io Added UpdateReplica
yb-tserver.INFO:I0828 10:07:52.910118  2169 wait_state.cc:238] does_io Added Applying
yb-tserver.INFO:I0828 10:17:07.257565  5048 wait_state.cc:238] does_io Added CloseFile
yb-tserver.INFO:I0828 10:17:07.257921  5048 wait_state.cc:238] does_io Added BlockCacheReadFromDisk
dev-server-amitanand2:~/yugabyte-data/node-1/disk-1/yb-data/tserver/logs
10:21 $ grep -e "wait_state.* does_wait Added " yb-tserver.*INFO*
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-095726.30491:I0828 09:57:59.860222 31001 wait_state.cc:251] does_wait Added Handling
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-095726.30491:I0828 09:58:00.109411 31001 wait_state.cc:251] does_wait Added UpdateReplica
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-100027.31629:I0828 10:00:32.022770 31970 wait_state.cc:251] does_wait Added Handling
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-100027.31629:I0828 10:00:32.240321 31970 wait_state.cc:251] does_wait Added UpdateReplica
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-100557.2109:I0828 10:06:02.664721  2485 wait_state.cc:251] does_wait Added Handling
yb-tserver.dev-server-amitanand2.amitanand2.log.INFO.20230828-100557.2109:I0828 10:06:03.007861  2516 wait_state.cc:251] does_wait Added UpdateReplica
yb-tserver.INFO:I0828 10:06:02.664721  2485 wait_state.cc:251] does_wait Added Handling
yb-tserver.INFO:I0828 10:06:03.007861  2516 wait_state.cc:251] does_wait Added UpdateReplica


08:31 $ grep wait_state.cc:232 *.log | awk '{ print $NF, $(NF-2) }' | sort | uniq
ApplyDone does_io
Applying does_io
BlockCacheReadFromDisk does_io
CloseFile does_io
Handling does_io
SubmittedWriteToPreparer does_io
UpdateReplica does_io
WALLogSync does_io
dev-server-amitanand2:...s-integration-tests__raft_consensus-itest [auh_waits L|…22⚑ 1]

dev-server-amitanand2:...s-integration-tests__raft_consensus-itest [auh_waits L|…22⚑ 1]
08:37 $ grep wait_state.cc:246 *.log | awk '{ print $NF, $(NF-2) }' | sort | uniq
AddedToLeader does_wait
ApplyDone does_wait
Applying does_wait
Handling does_wait
PrepareAndStart does_wait
SubmittedWriteToPreparer does_wait
UpdateReplica does_wait
Updating does_wait

